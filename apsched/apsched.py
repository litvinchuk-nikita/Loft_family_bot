import sqlite3
from aiogram import Bot
from datetime import timedelta, date, datetime
from keyboards.other_kb import create_question_kb
from database.database import select_user, select_id, select_user_id_registr, select_all_events, select_all_users
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext


def now_date():
    date_1 = date.today()
    now_date = datetime.strftime(date_1, '%d.%m.%Y')
    return now_date


def next_day_date():
    date_1 = date.today() - timedelta(days=1)
    next_day_date = datetime.strftime(date_1, '%d.%m.%Y')
    return next_day_date


def now_day_month(my_date):
    my_list = my_date.split('.')
    new_date = f'{my_list[0]}.{my_list[1]}'
    return new_date


def to_week_day_month(my_date):
    my_date = datetime.strptime(my_date, '%d.%m.%Y')
    my_date = my_date.date() - timedelta(days=7)
    my_date = datetime.strftime(my_date, '%d.%m.%Y')
    my_list = my_date.split('.')
    new_date = f'{my_list[0]}.{my_list[1]}'
    return new_date



async def send_message_cron(bot: Bot):
    event_list = select_all_events()
    user_list = select_all_users()
    for event in event_list:
        if event['date'] == now_date():
            for user in user_list:
                try:
                    text = f'–ü—Ä–∏–≤–µ—Ç, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥! –ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ "{event["name"]}", —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –∫ –Ω–∞–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–µ –∑–∞–±—É–¥—å –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∂–¥–µ–º —Ç–µ–±—è :)'
                    photo = event['photo']
                    await bot.send_photo(chat_id=int(user['user_id']), photo=event['photo'], caption=text)
                except:
                    print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è')
    for user in user_list:
        if to_week_day_month(user['birthday']) == datetime.now().strftime('%d.%m'):
            try:
                await bot.send_message(int(user['user_id']), text=f'–≠–π! –ù–∞–º —Ç—É—Ç –Ω–∞—à–µ–ø—Ç–∞–ª–∏ –Ω–∞—à–∏ –∞–≥–µ–Ω—Ç—ã –∏–∑ —Å–ª—É–∂–±—ã —Ä–∞–∑–≤–µ–¥–∫–∏, —á—Ç–æ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è —Ç–≤–æ—ë –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏, –ø–æ–ø—Ä–æ—Å–∏–ª–∏, —á—Ç–æ–±—ã –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è —Ç–µ–±—è –ø–æ–¥–∞—Ä–æ–∫! –¢–æ–ª—å–∫–æ –Ω–µ –∑–∞–±—É–¥—å –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–≥–æ.')
            except:
                print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è 1')
        if now_day_month(user['birthday']) == datetime.now().strftime('%d.%m'):
            try:
                await bot.send_message(int(user['user_id']), text=f'–•—ç–ø–ø–∏ –±—ë–∑–¥—ç–π –∏¬†–ø—É—Å—Ç—å —Ö—ç–ø–ø–∏ –±—É–¥–µ—Ç —Ç–≤–æ–π —ç–≤—Ä–∏ –¥—ç–π.\n–Ø –∂–µ–ª–∞—é —Ç–µ–±–µ –∫—Ä—É—Ç–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –¥—Ä–∞–π–≤–∞ –∏¬†–¥–≤–∏–∂–µ–Ω–∏—è –≤–≤–µ—Ä—Ö¬†‚Äî –∫¬†—Å–≤–æ–∏–º –º–µ—á—Ç–∞–º, –ø–æ–±–µ–¥–∞–º, –ª–∞–≤—Ä–∞–º —Å–ª–∞–≤—ã, –∑–≤—ë–∑–¥–∞–º –∂–µ–ª–∞–Ω–∏–π.\n–ü—É—Å—Ç—å –∏¬†—Å–µ–≥–æ–¥–Ω—è, –∏¬†—á–µ—Ä–µ–∑ —Å–æ—Ä–æ–∫ –ª–µ—Ç —Ç–≤–æ—é –ø—è—Ç—É—é —Ç–æ—á–∫—É —Ç—è–Ω–µ—Ç –≤ LOFT FAMILY')
            except:
                print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è 2')



async def send_message_cron_2(bot: Bot):
    event_list = select_all_events()
    user_list = select_all_users()
    for event in event_list:
        if event['date'] == next_day_date():
            id_list = select_user_id_registr(event['id'])
            try:
                for id in id_list:
                    user = select_user(id)
                    await bot.send_message(chat_id=int(user['user_id']), text=f'–í—ã –≤—á–µ—Ä–∞ –±—ã–ª–∏ –Ω–∞ "{event["name"]}" –ø—Ä–æ–π–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–∏–π –æ–ø—Ä–æ—Å, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ :)\n\n –û—Ü–µ–Ω–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –º—É–∑—ã–∫–∏:', reply_markup=create_question_kb())
            except:
                print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ–ø—Ä–æ—Å–∞')


async def send_message_interval(bot: Bot):
    ids = select_id()
    user_list = select_all_users()
    user_id_list = []
    for user in user_list:
        user_id_list.append(user['user_id'])
    for id in ids:
        if id not in user_id_list:
            try:
                await bot.send_message(id, f'–≠—ç—ç–π! –ù–∞–¥–µ—é—Å—å —Ç—ã –Ω–µ –∏–∑ —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –¥–æ–≤–æ–¥–∏—Ç –¥–µ–ª–∞ –¥–æ –∫–æ–Ω—Ü–∞? üòπ\n\n–ó–∞–≤–µ—Ä—à–∞–π —Å–∫–æ—Ä–µ–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –ø–æ–π–¥–µ–º —É–∂–µ —Ç—É—Å–∏—Ç—å üï∫üï∫')
            except:
                print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')